{"ast":null,"code":"import _classCallCheck from \"/Users/tharms/workspace/spring-boot-react-fullstack-examples/spring-boot-react-jpa-hibernate-with-h2-full-stack/frontend-spring-boot-react-jpa-hibernate-with-h2-full-stack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tharms/workspace/spring-boot-react-fullstack-examples/spring-boot-react-jpa-hibernate-with-h2-full-stack/frontend-spring-boot-react-jpa-hibernate-with-h2-full-stack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport React from 'react';\n\nvar ItemDataService =\n/*#__PURE__*/\nfunction () {\n  function ItemDataService() {\n    _classCallCheck(this, ItemDataService);\n  }\n\n  _createClass(ItemDataService, [{\n    key: \"retrieveAllItems\",\n    value: function retrieveAllItems(name) {\n      return fetch(\"http://localhost:8080/instructors/tharms\".concat(name, \"/courses\"), {\n        method: 'GET',\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n  }]);\n\n  return ItemDataService;\n}();\n\nexport default new ItemDataService();","map":{"version":3,"sources":["/Users/tharms/workspace/spring-boot-react-fullstack-examples/spring-boot-react-jpa-hibernate-with-h2-full-stack/frontend-spring-boot-react-jpa-hibernate-with-h2-full-stack/src/components/home/ItemDataService.js"],"names":["React","ItemDataService","name","fetch","method","headers","then","response","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,e;;;;;;;;;qCAEeC,I,EAAM;AACnB,aAAOC,KAAK,mDAA4CD,IAA5C,eAA4D;AACpEE,QAAAA,MAAM,EAAE,KAD4D;AAEpEC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAF2D,OAA5D,CAAL,CAKJC,IALI,CAKC,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAPM,CAAP;AAQH;;;;;;AAGL,eAAe,IAAIP,eAAJ,EAAf","sourcesContent":["import React from 'react';\n\nclass ItemDataService {\n\n    retrieveAllItems(name) {\n        return fetch(`http://localhost:8080/instructors/tharms${name}/courses`, {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => {\n            return response.json();\n        });\n    }\n}\n\nexport default new ItemDataService()\n"]},"metadata":{},"sourceType":"module"}